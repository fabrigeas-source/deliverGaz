name: Release

on:
  push:
    branches: [ stage ]
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    name: Build and push backend image to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Frontend - flutter pub get
        working-directory: frontend
        run: flutter pub get

      - name: Frontend - build web (release)
        working-directory: frontend
        run: flutter build web --release --dart-define=API_BASE_URL=${{ secrets.API_BASE_URL_PROD }}

      - name: Publish web build to backend/public
        shell: bash
        run: |
          rm -rf backend/public && mkdir -p backend/public
          cp -a frontend/build/web/. backend/public/

      - name: Build and push Backend image
        uses: ./pipelines/docker-build-push
        with:
          context: ./backend
          file: ./backend/Dockerfile
          tags: |
            ghcr.io/${{ github.repository_owner }}/delivergaz-backend:latest
            ghcr.io/${{ github.repository_owner }}/delivergaz-backend:${{ github.sha }}
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ github.ref == 'refs/heads/stage' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: ./pipelines/ec2-ssh-deploy
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT != '' && secrets.EC2_PORT || '22' }}
          image: ghcr.io/${{ github.repository_owner }}/delivergaz-backend:latest
          ghcr-username: ${{ secrets.GHCR_USERNAME }}
          ghcr-pat: ${{ secrets.GHCR_PAT }}
          app-name: delivergaz-api
          host-port: '3000'
          container-port: '3000'
          env-file: /opt/delivergaz/backend/.env
          network: delivergaz-network
