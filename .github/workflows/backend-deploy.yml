name: Backend Docker Build & Deploy

on:
  push:
    branches: [ stage ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch:

concurrency:
  group: backend-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    name: Build and push image to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/delivergaz-backend:latest
            ghcr.io/${{ github.repository_owner }}/delivergaz-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT || '22' }}
          script_stop: true
          script: |
            set -euo pipefail

            IMAGE="ghcr.io/${{ github.repository_owner }}/delivergaz-backend:latest"
            APP_NAME="delivergaz-api"
            HOST_PORT="3000"
            CONTAINER_PORT="4000"

            echo "Creating app directories and network..."
            sudo mkdir -p /opt/delivergaz/backend /opt/delivergaz/uploads /opt/delivergaz/logs
            sudo chown -R "$USER":"$USER" /opt/delivergaz
            docker network create delivergaz-network || true

            echo "Logging in to GHCR..."
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

            echo "Pulling latest image: $IMAGE"
            docker pull "$IMAGE"

            echo "Stopping and removing existing container if any..."
            docker stop "$APP_NAME" || true
            docker rm "$APP_NAME" || true

            echo "Starting container..."
            docker run -d --name "$APP_NAME" --restart unless-stopped \
              --network delivergaz-network \
              -p ${HOST_PORT}:${CONTAINER_PORT} \
              --env PORT=${CONTAINER_PORT} \
              --env-file /opt/delivergaz/backend/.env \
              -v /opt/delivergaz/uploads:/app/uploads \
              -v /opt/delivergaz/logs:/app/logs \
              "$IMAGE"

            echo "Deployment completed. Container status:"
            docker ps --filter "name=${APP_NAME}"
