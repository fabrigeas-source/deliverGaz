services:
  # DeliverGaz Flutter Web App
  delivergaz-frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: delivergaz-web
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - delivergaz-network

  # Nginx Reverse Proxy (Optional - for production with SSL)
  nginx-proxy:
    image: nginx:alpine
    container_name: delivergaz-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro  # SSL certificates directory
    depends_on:
      - delivergaz-frontend
    restart: unless-stopped
    networks:
      - delivergaz-network
    profiles:
      - production  # Only run with --profile production

  # Development container with hot reload (Alternative for development)
  delivergaz-dev:
    image: ghcr.io/cirruslabs/flutter:3.35.6
    container_name: delivergaz-dev
    working_dir: /app
    volumes:
      - .:/app
      - flutter-cache:/root/.cache
      - flutter-pub-cache:/root/.pub-cache
    ports:
      - "3002:3002"  # Flutter web dev server
    command: >
      sh -c "flutter config --enable-web &&
             flutter pub get &&
             flutter packages pub run build_runner build --delete-conflicting-outputs &&
             flutter gen-l10n &&
             flutter run -d web-server --web-hostname 0.0.0.0 --web-port 3002"
    environment:
      - FLUTTER_WEB_USE_SKIA=true
    networks:
      - delivergaz-network
    profiles:
      - development  # Only run with --profile development

# Networks
networks:
  delivergaz-network:
    driver: bridge
    name: delivergaz-net

# Volumes for development
volumes:
  flutter-cache:
    name: delivergaz-flutter-cache
  flutter-pub-cache:
    name: delivergaz-pub-cache